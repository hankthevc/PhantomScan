[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "phantom-dependency-radar"
version = "0.1.0"
description = "A live slopsquatting monitor for PyPI and npm packages"
authors = [
    {name = "Security Team", email = "security@example.com"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Security",
]

dependencies = [
    "httpx>=0.25.0",
    "pydantic>=2.4.0",
    "pandas>=2.1.0",
    "rapidfuzz>=3.4.0",
    "feedparser>=6.0.10",
    "pendulum>=2.1.2",
    "pyyaml>=6.0.1",
    "jinja2>=3.1.2",
    "orjson>=3.9.7",
    "typer[all]>=0.9.0",
    "rich>=13.6.0",
    "streamlit>=1.28.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.23.0",
    "duckdb>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "black>=23.9.0",
    "mypy>=1.6.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pre-commit>=3.5.0",
    "types-pyyaml",
    "types-requests",
]

[project.scripts]
radar = "radar.cli:app"

[project.urls]
"Homepage" = "https://github.com/example/phantom-dependency-radar"
"Bug Reports" = "https://github.com/example/phantom-dependency-radar/issues"
"Source" = "https://github.com/example/phantom-dependency-radar"

[tool.setuptools.packages.find]
include = ["radar*", "webapp*", "api*"]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py311']
line-length = 88
skip-string-normalization = true

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "feedparser.*",
    "duckdb.*",
    "streamlit.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["radar", "webapp", "api"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]